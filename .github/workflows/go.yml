name: Build and Release ccat

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Build target'
        required: true
        default: 'redmi'
        type: choice
        options:
          - server
          - tablet
          - redmi
          - all
      tag:
        description: 'Release tag (e.g., v1.2.3)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name: server
            goos: linux
            goarch: arm
            goarm: '5'
            ext: ''
          - name: tablet
            goos: android
            goarch: arm
            goarm: '7'
            ext: ''
          - name: redmi
            goos: android
            goarch: arm64
            goarm: ''
            ext: ''

    if: |
      github.event.inputs.target == matrix.name ||
      github.event.inputs.target == 'all'

    name: Build for ${{ matrix.name }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build ccat
        run: |
          # Set GO env
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          export GOARM=${{ matrix.goarm }}

          # Enable softfloat for server build
          if [ "${{ matrix.name }}" = "server" ]; then
            export CGO_ENABLED=0
            export GOMIPS=softfloat
          fi

          # Create output dir
          mkdir -p out/

          # Build binary
          go build -v -o out/ccat-${{ matrix.name }}${{ matrix.ext }} ./cmd/ccat

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: ccat-${{ matrix.name }}
          path: out/ccat-${{ matrix.name }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display artifacts
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: ccat ${{ github.event.inputs.tag }}
          files: |
            artifacts/ccat-*/ccat-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
