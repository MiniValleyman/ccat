name: Build and Release ccat

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Build target (server, tablet, redmi, all)'
        required: true
        default: 'all'
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true

  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Set up GitHub CLI
        uses: cli/cli-action@v2

      - name: Configure git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Build binaries
        run: |
          set -ex
          mkdir -p dist/

          build_ccat() {
            local name="$1"
            local goos="$2"
            local goarch="$3"
            local goarm="$4"

            echo "Building for $name"

            export GOOS="$goos"
            export GOARCH="$goarch"
            export GOARM="$goarm"

            if [[ "$name" == "server" ]]; then
              export CGO_ENABLED=0
              export GOMIPS=softfloat
            fi

            go build -v -o "dist/ccat-${name}" ./cmd/ccat
          }

          TARGET="${{ github.event.inputs.target }}"

          if [[ "$TARGET" == "all" || "$TARGET" == "server" ]]; then
            build_ccat server linux arm 5
          fi
          if [[ "$TARGET" == "all" || "$TARGET" == "tablet" ]]; then
            build_ccat tablet android arm 7
          fi
          if [[ "$TARGET" == "all" || "$TARGET" == "redmi" ]]; then
            build_ccat redmi android arm64 ""
          fi

      - name: Commit and tag release
        run: |
          git tag -a "${{ github.event.inputs.version }}" -m "Release ${{ github.event.inputs.version }}"
          git push origin "${{ github.event.inputs.version }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ccat-binaries
          path: dist/*

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ccat-binaries
          path: dist/

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/*
          name: Release ${{ github.ref_name }}
          body: |
            Released by: ${{ github.actor }}
