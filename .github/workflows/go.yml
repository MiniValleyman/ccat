name: Build and Release ccat

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Build target (server, tablet, redmi, all)'
        required: true
        default: 'redmi'
      tag:
        description: 'GitHub release tag (e.g. v1.0.0)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binaries
        run: |
          #!/bin/bash
          set -ex

          mkdir -p out/

          build_ccat() {
            local name="$1"
            local goos="$2"
            local goarch="$3"
            local goarm="$4"

            echo "Building for $name"

            export GOOS="$goos"
            export GOARCH="$goarch"
            export GOARM="$goarm"

            # Special case for server (softfloat, no cgo)
            if [[ "$name" == "server" ]]; then
              export CGO_ENABLED=0
              export GOMIPS=softfloat
            fi

            go build -v -o "out/ccat-${name}" ./cmd/ccat
          }

          TARGET="${{ github.event.inputs.target }}"

          if [[ "$TARGET" == "all" || "$TARGET" == "server" ]]; then
            build_ccat server linux arm 5
          fi
          if [[ "$TARGET" == "all" || "$TARGET" == "tablet" ]]; then
            build_ccat tablet android arm 7
          fi
          if [[ "$TARGET" == "all" || "$TARGET" == "redmi" ]]; then
            build_ccat redmi android arm64 ""
          fi

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ccat-binaries
          path: out/*

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ccat-binaries
          path: release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: ccat ${{ github.event.inputs.tag }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
